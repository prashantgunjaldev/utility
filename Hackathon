package com.example.adflogs;

import com.azure.identity.DefaultAzureCredential;
import com.azure.identity.DefaultAzureCredentialBuilder;
import com.azure.core.credential.AccessToken;
import com.azure.core.credential.TokenRequestContext;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ArrayNode;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;
import org.springframework.context.annotation.Bean;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.reactive.function.client.WebClient;
import reactor.core.publisher.Mono;

import java.time.Duration;
import java.time.Instant;

@SpringBootApplication
public class AdfLogsApplication {
    public static void main(String[] args) {
        SpringApplication.run(AdfLogsApplication.class, args);
    }

    @Bean
    public WebClient webClient() {
        return WebClient.builder().baseUrl("https://management.azure.com").build();
    }
}

@RestController
@RequestMapping("/api/adf")
class ADFLogController {

    @Value("${azure.subscriptionId}")
    private String subscriptionId;

    @Value("${azure.resourceGroup}")
    private String resourceGroup;

    @Value("${azure.dataFactoryName}")
    private String factoryName;

    private final WebClient webClient;

    private final ObjectMapper objectMapper = new ObjectMapper();

    public ADFLogController(WebClient webClient) {
        this.webClient = webClient;
    }

    @GetMapping("/logs")
    public ResponseEntity<?> fetchADFLogs() {
        try {
            String token = getAccessToken();
            ArrayNode result = objectMapper.createArrayNode();

            String pipelineUrl = String.format("/subscriptions/%s/resourceGroups/%s/providers/Microsoft.DataFactory/factories/%s/pipelines?api-version=2018-06-01",
                    subscriptionId, resourceGroup, factoryName);

            JsonNode pipelines = webClient.get()
                    .uri(pipelineUrl)
                    .headers(h -> h.setBearerAuth(token))
                    .retrieve()
                    .bodyToMono(JsonNode.class)
                    .block();

            for (JsonNode pipeline : pipelines.get("value")) {
                String name = pipeline.get("name").asText();
                String runUrl = String.format("/subscriptions/%s/resourceGroups/%s/providers/Microsoft.DataFactory/factories/%s/pipelineruns?api-version=2018-06-01&$filter=PipelineName eq '%s' and RunStart ge '%s'",
                        subscriptionId, resourceGroup, factoryName, name, Instant.now().minus(Duration.ofDays(7)));

                JsonNode runs = webClient.get()
                        .uri(runUrl)
                        .headers(h -> h.setBearerAuth(token))
                        .retrieve()
                        .bodyToMono(JsonNode.class)
                        .block();

                result.addObject()
                        .put("pipeline", name)
                        .set("runs", runs.get("value"));
            }

            return ResponseEntity.ok(result);
        } catch (Exception e) {
            return ResponseEntity.internalServerError().body("Error: " + e.getMessage());
        }
    }

    private String getAccessToken() {
        DefaultAzureCredential credential = new DefaultAzureCredentialBuilder().build();
        AccessToken token = credential.getToken(new TokenRequestContext()
                .addScopes("https://management.azure.com/.default"))
                .block();
        return token.getToken();
    }
}


===========
<dependencies>
    <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
        <groupId>com.azure</groupId>
        <artifactId>azure-identity</artifactId>
        <version>1.9.0</version>
    </dependency>
    <dependency>
        <groupId>com.azure</groupId>
        <artifactId>azure-core</artifactId>
        <version>1.41.0</version>
    </dependency>
    <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
    </dependency>
</dependencies>
