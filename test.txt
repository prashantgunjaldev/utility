import org.junit.jupiter.api.Test;
import static org.junit.jupiter.api.Assertions.*;

class GeneralUtilTest {

    @Test
    void testIsMasterPod_HostnameEndsWithZero() {
        // Hostname like "service-0" splits on "-" and last part is "0"
        assertTrue(GeneralUtil.isMasterPod("service-0"));
    }

    @Test
    void testIsMasterPod_HostnameEndsWithNonZero() {
        // Hostname like "service-1" should return false (not master)
        assertFalse(GeneralUtil.isMasterPod("service-1"));
    }

    @Test
    void testIsMasterPod_HostnameDoesNotContainDash() {
        // Hostname doesn't contain '-', so returns false
        assertFalse(GeneralUtil.isMasterPod("service0"));
    }

    @Test
    void testIsMasterPod_NullHostname() {
        // Null hostname edge case
        assertFalse(GeneralUtil.isMasterPod(null));
    }

    @Test
    void testIsMasterPod_HostnameWithNonNumericSuffix() {
        // Hostname like "service-x", last chunk not parseable int: triggers catch block
        assertFalse(GeneralUtil.isMasterPod("service-x"));
    }

    @Test
    void testIsMasterPod_HostnameWithMultipleDashes() {
        // Hostname like "main-service-prod-0" -> last chunk is "0"
        assertTrue(GeneralUtil.isMasterPod("main-service-prod-0"));
    }

    @Test
    void testIsMasterPod_HostnameWithMalformedNumericSection() {
        // Hostname like "svc-prod-aa0" -> last chunk "aa0" not a pure number: triggers catch
        assertFalse(GeneralUtil.isMasterPod("svc-prod-aa0"));
    }
}
