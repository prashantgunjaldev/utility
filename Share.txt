import static org.mockito.Mockito.*;
import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;
import org.springframework.http.HttpMethod;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.client.RestTemplate;

class DataProviderMigrationServiceImplTest {

    @InjectMocks
    private DataProviderMigrationServiceImpl dataProviderMigrationService;

    @Mock
    private RestTemplate restTemplate;

    @Mock
    private DatasetMapper datasetMapper;

    @Mock
    private DatasetResponseUtil datasetResponseUtil;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    void testSaveCSVSchemaToDataset_Success() {
        // Arrange
        FileSchema fileSchema = mock(FileSchema.class);
        Dataset dataset = new Dataset();
        DatasetResponse mockResponse = new DatasetResponse();
        mockResponse.setDatasetId("123");
        ResponseEntity<DatasetResponse> mockEntity = new ResponseEntity<>(mockResponse, HttpStatus.OK);

        when(fileSchema.getParserType()).thenReturn(ParserType.CSV);
        when(fileSchema.getDatasetId()).thenReturn(null);

        when(datasetMapper.mapCSVSchemaToDataset(fileSchema)).thenReturn(dataset);
        when(restTemplate.exchange(
                eq("feedProcessingConfigURL" + Constants.URL_DATASET_CREATE_SINGLE_DATASET),
                eq(HttpMethod.POST),
                any(),
                eq(DatasetResponse.class)
        )).thenReturn(mockEntity);

        // Act
        dataProviderMigrationService.saveCSVSchemaToDataset(fileSchema, "feedId", "feedGroupId", false);

        // Assert
        verify(datasetMapper, times(1)).mapCSVSchemaToDataset(fileSchema);
        verify(restTemplate, times(1)).exchange(anyString(), eq(HttpMethod.POST), any(), eq(DatasetResponse.class));
        assertEquals("123", fileSchema.getDatasetId());
    }

    @Test
    void testSaveCSVSchemaTo
