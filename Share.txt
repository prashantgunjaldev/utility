import org.springframework.core.io.ByteArrayResource;
import org.springframework.http.*;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import java.util.Map;

@Service
public class FileDownloader {

    private final RestTemplate restTemplate = new RestTemplate();

    public byte[] downloadFile(String filename) {
        // Step 1: Send POST request to your backend
        String postUrl = "http://localhost:8080/download"; // Your backend API

        HttpHeaders headers = new HttpHeaders();
        headers.setContentType(MediaType.APPLICATION_JSON);
        HttpEntity<Map<String, String>> entity = new HttpEntity<>(Map.of("filename", filename), headers);

        ResponseEntity<Void> response = restTemplate.exchange(postUrl, HttpMethod.POST, entity, Void.class);

        // Step 2: Check redirect location (303 or 302)
        if (response.getStatusCode().is3xxRedirection()) {
            String redirectUrl = response.getHeaders().getLocation().toString();

            // Step 3: Follow the redirect and fetch file
            ResponseEntity<ByteArrayResource> fileResponse = restTemplate.exchange(
                    redirectUrl,
                    HttpMethod.GET,
                    null,
                    ByteArrayResource.class
            );

            if (fileResponse.getStatusCode().is2xxSuccessful()) {
                return fileResponse.getBody().getByteArray();
            }
        }

        throw new RuntimeException("Failed to download file");
    }
}
