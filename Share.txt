package com.example.service;

import com.example.repository.ApiLogJpaRepo;
import com.example.model.ApiLog;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.junit.jupiter.MockitoExtension;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class ApiLogServiceImplTest {

    private static final Logger log = LoggerFactory.getLogger(ApiLogServiceImplTest.class);

    @Mock
    private ApiLogJpaRepo apiLogJpaRepo;

    @InjectMocks
    private ApiLogServiceImpl apiLogService;

    private ApiLog apiLog;

    @BeforeEach
    void setUp() {
        apiLog = new ApiLog(); // Set fields if necessary
    }

    @Test
    void testLogSuccess() {
        doNothing().when(apiLogJpaRepo).save(apiLog);

        apiLogService.log(apiLog);

        verify(apiLogJpaRepo, times(1)).save(apiLog);
        log.info("Test: API log persisted successfully");
    }

    @Test
    void testLogFailure() {
        doThrow(new RuntimeException("DB error")).when(apiLogJpaRepo).save(apiLog);

        apiLogService.log(apiLog);

        verify(apiLogJpaRepo, times(1)).save(apiLog);
        log.error("Test: Failed to persist API log due to DB error");
    }
}
