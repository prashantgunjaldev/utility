import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.extension.ExtendWith;
import org.mockito.Mock;
import org.mockito.Mockito;
import org.mockito.junit.jupiter.MockitoExtension;

import java.util.logging.Logger;

import static org.mockito.Mockito.*;

@ExtendWith(MockitoExtension.class)
class ApiLoggingCleanupServiceTest {

    @Mock
    private LogRepositoryService logRepositoryService;

    @Mock
    private ApiLoggingCleanupProperties properties;

    private ApiLoggingCleanupService cleanupService;

    @BeforeEach
    void setUp() {
        // Mock properties to return a retention period of 30 days
        when(properties.getRetentionDays()).thenReturn(30);

        cleanupService = new ApiLoggingCleanupService(logRepositoryService, properties);
    }

    @Test
    void testCleanOldLogs() {
        // Mock the delete operation to return 5 deleted records
        when(logRepositoryService.deleteOldLogs(30)).thenReturn(5);

        // Execute the cleanup method
        cleanupService.cleanOldLogs();

        // Verify that deleteOldLogs(30) was called once
        verify(logRepositoryService, times(1)).deleteOldLogs(30);
    }
}
