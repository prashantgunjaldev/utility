public List<String> fetchDataInParallel(List<String> urls) {
    return Flux.fromIterable(urls)
            .flatMap(this::fetchDataWithRetry, 10) // Run max 10 requests in parallel
            .collectList()
            .block();
}

private Mono<String> fetchDataWithRetry(String url) {
    return fetchData(url)
            .flatMap(response -> {
                if (response.contains("401") || response.contains("403")) {
                    return refreshAuthCookies().then(fetchData(url)); // Refresh auth and retry
                }
                return Mono.just(response);
            })
            .retryWhen(Retry.backoff(3, Duration.ofMillis(500)))
            .onErrorResume(e -> Mono.just("Error fetching: " + url + " - " + e.getMessage()));
}

private Mono<String> fetchData(String url) {
    return webClient.get()
            .uri(url)
            .retrieve()
            .bodyToMono(String.class)
            .timeout(Duration.ofSeconds(15));
}
