import static org.assertj.core.api.Assertions.assertThat;
import static org.mockito.Mockito.*;

import java.util.List;
import java.util.Collections;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;
import org.mockito.InjectMocks;
import org.mockito.Mock;
import org.mockito.MockitoAnnotations;

public class ProcessExecutionTrackerRepositoryTest {

    @Mock
    private ProcessExecutionTrackerRepository repository;

    @BeforeEach
    void setUp() {
        MockitoAnnotations.openMocks(this);
    }

    @Test
    public void testFindWipProcessById() {
        // Given
        ProcessExecutionTracker tracker = new ProcessExecutionTracker();
        tracker.setProcessId("123");
        tracker.setStatus("PROCESSING");

        when(repository.findWipProcessById("123")).thenReturn(Collections.singletonList(tracker));

        // When
        List<ProcessExecutionTracker> results = repository.findWipProcessById("123");

        // Then
        assertThat(results).isNotEmpty();
        assertThat(results.get(0).getProcessId()).isEqualTo("123");

        // Verify that the method was called once
        verify(repository, times(1)).findWipProcessById("123");
    }
}
